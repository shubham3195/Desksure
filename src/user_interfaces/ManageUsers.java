/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_interfaces;

import core.EncryptionEngine;
import core.Main;
import core.Resources;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import support_code.User;
import support_code.UserFile;
import support_code.UserFiles;
import support_code.Users;

/**
 *
 * @author Suraj Malviya
 */
public class ManageUsers extends javax.swing.JFrame {

    /**
     * Creates new form ManageUsers
     */
    
    DefaultTableModel users_model;
    Resources myResource;
    ArrayList<User> allUsers;
    HashMap<String, User> userMap;
    HashMap<String, User> userNameMap;
    User selected_user;
    int current_row;
    public ManageUsers() 
    {
        initComponents();
         setIconImage(Main.resources.giveImageIcon());
        users_model=(DefaultTableModel) users_table.getModel();
        //users_table.setModel(users_model);
        myResource=Resources.getResourceInstance();
        
        Users myUsers = myResource.getUsers();
        
        allUsers=(ArrayList<User>) myUsers.getUsers();
        userMap=(HashMap<String, User>) myUsers.getUserMACMap();
        userNameMap=(HashMap<String, User>) myUsers.getUserNameMap();
        
        
        allUsers.forEach((user) -> {
            
            String type=user.getType()==10?"Admin":"Naive";
            users_model.addRow(new Object[]
            {user.getName(),user.getMAC(),type}
            );
        });
           users_table.setModel(users_model);
    }

    private AdminDashboard dashboard;
    
    public ManageUsers(AdminDashboard dashbaord) 
    {
        initComponents();
         setIconImage(Main.resources.giveImageIcon());
        this.dashboard=dashbaord;
        users_model=(DefaultTableModel) users_table.getModel();
       
        myResource=Resources.getResourceInstance();
        Users myUsers = myResource.getUsers();
        
        allUsers=(ArrayList<User>) myUsers.getUsers();
        userMap=(HashMap<String, User>) myUsers.getUserMACMap();
        userNameMap=(HashMap<String, User>) myUsers.getUserNameMap();
        System.out.println("In Manage");
        allUsers.forEach((user) ->
        {
            String type=user.getType()==10?"Admin":"Naive";
            users_model.addRow(new Object[]
            {user.getName(),user.getMAC(),type}
            );
        });
         users_table.setModel(users_model);
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        users_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage User");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        users_table.setBackground(new java.awt.Color(102, 204, 255));
        users_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "MAC Address", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        users_table.setOpaque(false);
        users_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                users_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(users_table);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/remove-userxs.png"))); // NOI18N
        jLabel1.setText(" REMOVE USER");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/MANAGE.png"))); // NOI18N
        jLabel3.setText("  MANAGE USER");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-userxs.png"))); // NOI18N
        jLabel9.setText("ADD USER");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(jLabel9)
                .addGap(74, 74, 74)
                .addComponent(jLabel1)
                .addGap(392, 392, 392)
                .addComponent(jLabel4)
                .addGap(191, 191, 191)
                .addComponent(jLabel2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(jLabel3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
    new AddUser(dashboard).setVisible(true);
    dispose();    // TODO add your handling code here:
    }//GEN-LAST:event_jLabel9MouseClicked
    
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
    
    if(selected_user!=null)
    {
        int confirm=JOptionPane.showConfirmDialog(this,"Do you really want to Remove User:"+selected_user.getName());
        ArrayList<UserFile> selected_user_files=myResource.getUserFiles().getSelectedUserFile(selected_user);
        int filecount=selected_user_files.size();
            System.err.println("file count : "+filecount);
        if(confirm==0)
        {
           if(filecount>0)
           {
               int decryptConfirm=JOptionPane.showConfirmDialog(this,"This user Has encrypted "+filecount+
                       " files,\n Do you want to Decrypt them and Remove User ?");
               if(decryptConfirm==0)
               {
                   removeSystemUserWithFiles(selected_user_files);
                }
           }
           else
           {
               removeUser();
           }
        }   
    }
    else
    {
       JOptionPane.showMessageDialog(this,"Select a User First !");
    }
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void removeSystemUserWithFiles(ArrayList<UserFile> selected_user_files )
    {
        System.err.println("Decrpting Files Started...");
           selected_user_files.forEach((userFile)->
           {
               File currentFile=userFile.getFile();
                if(currentFile.exists())
                {
                    if(userFile.isEnrypted())
                    {
                        System.err.println("Decrypting"+currentFile.getName());
                        try 
                        {
                            EncryptionEngine.decrpytFile(currentFile);
                        } 
                        catch (Exception ex) 
                        {
                           System.err.println(ex);
                        }
                        System.err.println("File:"+currentFile.getName()+" Decrypted Successfully");

                    }
                    System.err.println("Removing File from the System");
                   
                }
                 myResource.getUserFiles().removeFile(userFile);
           });
           
           UserFiles files=myResource.getUserFiles();
//        try {
//            files.saveFilesObject();
//        } catch (IOException ex) {
//            ex.printStackTrace();
//        }
//           
//           
           removeUser();
    }
    
    private void removeUser()
    {
            userMap.remove(selected_user.getMAC(),selected_user);
            userNameMap.remove(selected_user.getName().toUpperCase().trim());
            allUsers.remove(selected_user);
            users_model.removeRow(current_row);
            Users myUsers=myResource.getUsers();
            try 
            {
              myUsers.saveUsersObject(myUsers); 
              JOptionPane.showMessageDialog(this,"User Successfully removed !");
            } 
            catch (Exception e) 
            {
                e.printStackTrace();
            }
    }
    
    
    
    private void users_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_users_tableMouseClicked
    current_row=users_table.getSelectedRow(); 
    selected_user=allUsers.get(current_row);
    // TODO add your handling code here:
    }//GEN-LAST:event_users_tableMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    this.dashboard.setState(NORMAL);
    dispose();    // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel9MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable users_table;
    // End of variables declaration//GEN-END:variables
}
