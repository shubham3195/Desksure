/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_interfaces;

import core.DataTable;
import core.EncryptionEngine;
import core.Main;
import core.Resources;
import icons.fileicons.IconProvider;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.bluetooth.RemoteDevice;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import support_code.FileStatus;
import support_code.User;
import support_code.UserFile;
import support_code.UserFiles;

/**
 *
 * @author Suraj Malviya
 */
public class MyFiles extends javax.swing.JFrame {

    /**
     * Creates new form MyFiles
     */
    
    private User current_user;
    private List<UserFile> current_user_Files;
    private Resources myResources;
    private RemoteDevice naive_device;
    private DefaultTableModel model;
    private final IconProvider icons=new IconProvider();
    
    public MyFiles() 
    {
        initComponents();
         setIconImage(Main.resources.giveImageIcon());
        this.myResources=Resources.getResourceInstance();
        DataTable.makeMyFilesTable(fileTable);
        this.model=(DefaultTableModel) fileTable.getModel();
        allFiles=myResources.getUserFiles();
        makeVisible(false);
    }
    
    
    public MyFiles(RemoteDevice device, User current_user)
    {
        initComponents();
         setIconImage(Main.resources.giveImageIcon());
        this.myResources=Resources.getResourceInstance();
        this.current_user=current_user;
        DataTable.makeMyFilesTable(fileTable);
        this.model=(DefaultTableModel) fileTable.getModel();
        current_user_Files=new ArrayList<>();
        this.naive_device=device;
        allFiles=myResources.getUserFiles();
        makeVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        icon_logo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        sizee = new javax.swing.JLabel();
        fiileSizeLabel = new javax.swing.JLabel();
        timeStampLable = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileTable = new javax.swing.JTable();
        fileType = new javax.swing.JLabel();
        fileName = new javax.swing.JLabel();
        adon = new javax.swing.JLabel();
        encrypt_label = new javax.swing.JLabel();
        encrypt_label1 = new javax.swing.JLabel();

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("My Files");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(712, 0, 14, 365));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file-removexs.png"))); // NOI18N
        jLabel6.setText("REMOVE FILE");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 322, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/filexs.png"))); // NOI18N
        jLabel2.setText(" ADD FILE");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 322, -1, -1));

        icon_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icon_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/pdf.png"))); // NOI18N
        jPanel1.add(icon_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(799, 66, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/folder.png"))); // NOI18N
        jLabel3.setText(" MY FILES");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 11, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/customer-service.png"))); // NOI18N
        jLabel4.setText(" FILE INFO");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 13, 166, -1));

        type.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        type.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        type.setText("TYPE :");
        jPanel1.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(806, 233, 43, -1));

        sizee.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sizee.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sizee.setText("SIZE :");
        jPanel1.add(sizee, new org.netbeans.lib.awtextra.AbsoluteConstraints(791, 260, 57, -1));

        fiileSizeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fiileSizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        fiileSizeLabel.setText("-----------");
        jPanel1.add(fiileSizeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(858, 259, 102, -1));

        timeStampLable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        timeStampLable.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        timeStampLable.setText("XX.XX.XXXX XX:XX XX");
        jPanel1.add(timeStampLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(858, 286, -1, -1));

        fileTable.setAutoCreateRowSorter(true);
        fileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FileName", "Path"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fileTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fileTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fileTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fileTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 86, 691, 228));

        fileType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fileType.setText("-----------");
        jPanel1.add(fileType, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 232, 85, -1));

        fileName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fileName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fileName.setText("_________SELECT A FILE FROM LIST___________");
        jPanel1.add(fileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 205, 262, -1));

        adon.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        adon.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        adon.setText("ADDED ON :");
        jPanel1.add(adon, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 287, -1, -1));

        encrypt_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        encrypt_label.setForeground(new java.awt.Color(153, 0, 0));
        encrypt_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        encrypt_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-lock.png"))); // NOI18N
        encrypt_label.setText(" ENCRYPTED");
        jPanel1.add(encrypt_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 320, -1, -1));

        encrypt_label1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        encrypt_label1.setForeground(new java.awt.Color(153, 0, 0));
        encrypt_label1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        encrypt_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-lock.png"))); // NOI18N
        encrypt_label1.setText("DECRYPT FILE ");
        encrypt_label1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encrypt_label1MouseClicked(evt);
            }
        });
        jPanel1.add(encrypt_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(794, 320, 135, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    fetchFiles(); 
    current_user_Files.forEach((userFile)->
    {
        model.addRow(new Object[]{userFile.getFile().getName(),userFile.getFile().getPath()});
    });
    // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    
    
    private void fileTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileTableMouseClicked
    selected_file=current_user_Files.get(fileTable.getSelectedRow());
    row=fileTable.getSelectedRow();
    makeVisible(true);
    
    String extension= selected_file.getExtension();
    
    String timpestamp=selected_file.getTimeStamp();
    
    long size=selected_file.getFile().length();
    
    String fileSize=Resources.getFileSize(size);
    
    fileName.setText(selected_file.getFile().getName());
    
    fileType.setText(extension);
    
    timeStampLable.setText(timpestamp);
    
    fiileSizeLabel.setText(fileSize);
       
    if(selected_file.isEnrypted())
    {
        encrypt_label.setText("ENCRYPTED");
        encrypt_label.setIcon(new ImageIcon(icons.file_lock));
        encrypt_label1.setText("DECRYPT FILE");
        encrypt_label1.setIcon(new ImageIcon(icons.file_unlock));
    }   
    else
    {
        encrypt_label.setText("DECRYPTED");
        encrypt_label.setIcon(new ImageIcon(icons.file_unlock));
        encrypt_label1.setText("ENCRYPT FILE");
        encrypt_label1.setIcon(new ImageIcon(icons.file_lock));
    }

    }//GEN-LAST:event_fileTableMouseClicked

    private void makeVisible(boolean visible)
    {
        icon_logo.setVisible(visible);
        fileName.setVisible(visible);
        fileType.setVisible(visible);
        timeStampLable.setVisible(visible);
        fiileSizeLabel.setVisible(visible);
        type.setVisible(visible);
        adon.setVisible(visible);
        sizee.setVisible(visible);
        encrypt_label1.setVisible(visible);
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    new WorkInProgress(naive_device).setVisible(true);  
    dispose();// TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
    JFileChooser chooser;   
    chooser=new JFileChooser("C:\\");
    chooser.setMultiSelectionEnabled(false);
    int approve=chooser.showOpenDialog(this);
    if(approve==JFileChooser.APPROVE_OPTION)
    {
        File newFile=chooser.getSelectedFile();
        
        String path=newFile.getPath();
        String fileExtension=Resources.fetchFileExtension(path);
        
        int i=JOptionPane.showConfirmDialog(this,"Do you really want to Secure this File using DeskSure ?");
        if(i==0)
        {
            try 
            {
                UserFile file=new UserFile(newFile, fileExtension, current_user, FileStatus.DECRYPTED);
                EncryptionEngine.encryptFile(newFile);
                file.setEncrypted(true);
                allFiles.addFile(file);
                allFiles.saveFilesObject();

                JOptionPane.showMessageDialog(this, "File Successfully Encrypted and added !");
                model.addRow(new Object[]{file.getFile().getName(),file.getFile().getPath()});
            } 
            catch (Exception e) 
            {
                e.printStackTrace();
            }
        }
    }     // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked
    UserFile selected_file; int row=-1;
    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
    if(selected_file!=null)
    {
        
        File currentFile=selected_file.getFile();
        int confirm=JOptionPane.showConfirmDialog(this,"Do you really want to remove the File:\n"+currentFile.getName());
        if(confirm==0)
        {
            
            if(currentFile.exists())
            {
                if(selected_file.isEnrypted())
                {
                    System.err.println("Decrypting"+currentFile.getName());
                    try 
                    {
                        EncryptionEngine.decrpytFile(currentFile);
                        selected_file.setEncrypted(false);
                         System.err.println("File: "+currentFile.getName()+" Decrypted Successfully");
                    } 
                    catch (Exception ex) 
                    {
                       ex.printStackTrace();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this,"File is missing from the location !");
            }

            System.err.println("Removing File from the DeskSure !");  

            allFiles.removeFile(selected_file);
            try 
            {
                allFiles.saveFilesObject();
                model.removeRow(row);
               JOptionPane.showMessageDialog(this, "File Successfully removed !");
                 row=-1;  
                selected_file=null;
            } 
            catch (IOException e) 
            {
                e.printStackTrace();
            }
        }
    }
    else
    {
        JOptionPane.showMessageDialog(this, "Select a File !");
    }   // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
    selected_file=null;   // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void encrypt_label1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encrypt_label1MouseClicked
    if(selected_file!=null)
    {
        if(selected_file.getFile().exists())
        {
            if(encrypt_label1.getText().equalsIgnoreCase("encrypt file"))
            {
                if(!selected_file.isEnrypted())
                {
                    try 
                    {
                       int confirm=JOptionPane.showConfirmDialog(this,"Do you want to Encrypt the File: \n"+
                               selected_file.getFile().getName());
                       if(confirm==0)
                       {
                            System.err.println("Encrypting File: "+selected_file.getFile().getName());
                            EncryptionEngine.encryptFile(selected_file.getFile());
                            System.err.println("File is Encrypted !");
                            encrypt_label.setIcon(new ImageIcon(icons.file_lock));
                            encrypt_label.setText(" ENCRYPTED");
                            encrypt_label1.setIcon(new ImageIcon(icons.file_unlock));
                            encrypt_label1.setText("DECRYPT FILE");
                            selected_file.setEncrypted(true);
                            JOptionPane.showMessageDialog(this, "FILE ENCRYPTED SUCCESSFULLY !");
                       }
                    }
                    catch (Exception e) 
                    {
                        e.printStackTrace();
                    }

                }
            }   
            else
            {
                 if(selected_file.isEnrypted())
                {
                    try 
                    {
                        int confirm=JOptionPane.showConfirmDialog(this,"Do you want to Decrypt the File: \n"+
                               selected_file.getFile().getName());
                        if(confirm==0)
                        {
                            System.err.println("Decrypting File: "+selected_file.getFile().getName());
                            EncryptionEngine.decrpytFile(selected_file.getFile());
                            System.err.println("File is Decrypted !");
                            encrypt_label.setIcon(new ImageIcon(icons.file_unlock));
                            encrypt_label.setText(" DECRYPTED");
                            encrypt_label1.setIcon(new ImageIcon(icons.file_lock));
                            encrypt_label1.setText("ENCRYPT FILE");
                            selected_file.setEncrypted(false);
                            JOptionPane.showMessageDialog(this, "FILE DECRYPTED SUCCESSFULLY !");
                        }
                    }
                    catch (Exception e) 
                    {
                        e.printStackTrace();
                    }
                }
            }
            try {
                allFiles.saveFilesObject();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"File is Missing from Location !");
        }
    }
    else
    {
        JOptionPane.showMessageDialog(this, "Select a File !");
    }    // TODO add your handling code here:
    }//GEN-LAST:event_encrypt_label1MouseClicked

    private UserFiles allFiles;
    
    private void fetchFiles()
    {
        allFiles.getUserfiles().forEach((userFile)->
        {
            if(userFile.getAddedBy().equals(current_user))
            {
                current_user_Files.add(userFile);
            }
        });
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFiles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adon;
    private javax.swing.JLabel encrypt_label;
    private javax.swing.JLabel encrypt_label1;
    private javax.swing.JLabel fiileSizeLabel;
    private javax.swing.JLabel fileName;
    private javax.swing.JTable fileTable;
    private javax.swing.JLabel fileType;
    private javax.swing.JLabel icon_logo;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel sizee;
    private javax.swing.JLabel timeStampLable;
    private javax.swing.JLabel type;
    // End of variables declaration//GEN-END:variables
}
